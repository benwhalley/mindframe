# Generated by Django 5.1.6 on 2025-03-19 12:59

import autoslug.fields
import django.db.models.deletion
import django_lifecycle.mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("mindframe", "0035_rename_telegram_conversation_id_conversation_chat_room_id"),
    ]

    operations = [
        migrations.AddField(
            model_name="turn",
            name="checkpoint",
            field=models.BooleanField(
                default=False,
                help_text="Is this a checkpoint? If true, the conversation will return to this turn when an interruption is resolved.",
            ),
        ),
        migrations.AddField(
            model_name="turn",
            name="checkpoint_resolved",
            field=models.BooleanField(
                default=False,
                help_text="Has this interruption been resolved? Did we return to the step in this checkpoint?",
            ),
        ),
        migrations.CreateModel(
            name="ConversationalStrategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("key", autoslug.fields.AutoSlugField(editable=False, populate_from="name")),
                ("name", models.CharField(max_length=255)),
                ("text", models.TextField()),
                (
                    "intervention",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="strategies",
                        to="mindframe.intervention",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Interruption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "trigger",
                    models.TextField(
                        default="interrupt is True",
                        help_text="The Judgement used should return a value for `interrupt` which is boolean (or coercible to boolean). If this is true, the interruption will be applied and the conversation will switch to the target step.",
                    ),
                ),
                (
                    "resolution",
                    models.TextField(
                        default="interruption_resolved is True",
                        help_text="In an interruption branch, Judgements should be used to (eventually) return a value which allows us to determine if the interruption should end. This `resolution` field is a condition that, if true, will jump the user back to their last checkpoint.",
                    ),
                ),
                ("priority", models.PositiveSmallIntegerField(default=1)),
                (
                    "intervention",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interruption",
                        to="mindframe.intervention",
                    ),
                ),
                (
                    "judgement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interruptions",
                        to="mindframe.judgement",
                    ),
                ),
                (
                    "target_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interruptions",
                        to="mindframe.step",
                    ),
                ),
            ],
            options={
                "ordering": ["priority"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="turn",
            name="interruption",
            field=models.ForeignKey(
                blank=True,
                help_text="The interruption which this turn is a checkpoint for. If `self.checkpoint` is True but this is null, then this Turn is the resolution of the previous interruption.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="checkpoints",
                to="mindframe.interruption",
            ),
        ),
    ]
