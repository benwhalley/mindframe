services:
  base:
    container_name: mindframe-staging-base
    build:
      context: ../mindframe
      dockerfile: ../mindframe/Dockerfile.prod
      args:
        MINDFRAME_COMMIT: main
        BUILDKIT_PROGRESS: plain
    image: mindframe-prod:latest

  web:
    container_name: mindframe-staging-web
    restart: unless-stopped
    labels:
      caddy: "test.mindframe.llemma.net"
      caddy.reverse_proxy: "{{upstreams 8000}}"
    ports: ["8080:8000"]
    networks:
      - caddy
      - backend
    image: mindframe-prod:latest
    command:
      [
        "sh",
        "-c",
        "uvicorn config.asgi:application --workers 1 --host 0.0.0.0 --port 8000 --log-level debug"
      ]
    depends_on:
      - redis
      - postgres
      - chat
      - worker
    env_file:
      - ../secrets/test.mindframe.env
    environment:
      - APP_MODE=web
    volumes:
      - ~/dev/mindframe/mindframe:/app/mindframe

  chat:
    container_name: mindframe-staging-chat
    restart: unless-stopped
    labels:
      caddy: "bot.test.mindframe.llemma.net"
      caddy.reverse_proxy: "{{upstreams 8000}}"
    ports: ["8081:8000"]
    networks:
      - caddy
      - backend
    depends_on:
      - redis
      - postgres
    image: mindframe-prod:latest

    command:
      [
        "sh",
        "-c",
        "python chatbot.py"
      ]
    env_file:
      - ../secrets/test.mindframe.env
    environment:
      - APP_MODE=chat
    volumes:
      - ../mindframe/mindframe:/app/mindframe

  worker:
    container_name: mindframe-staging-worker
    restart: unless-stopped
    image: mindframe-prod:latest
    networks:
      - backend
    command:
      [
        "sh",
        "-c",
        "celery --app mindframe worker --pool=solo --loglevel=debug"
      ]
    env_file:
      - ../secrets/test.mindframe.env
    environment:
      - APP_MODE=worker
    volumes:
      - ~/dev/mindframe/mindframe:/app/mindframe
